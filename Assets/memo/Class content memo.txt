2025/04/01
파티클 시트템 렌더러 확인
Material(재질,표면,서페이서)ex.피부
mesh -> Material(메탈릭,광원 효과를 주기 위함)

프로그램 실행 순서
1) WinMain 

Toggle Gurup(컴포넌트)
토글 생성후 연결

audio Listener(컴포넌트)
씬에 1개만 있으면 된다

List는 눈에 안보여도 구동중이다
그러므로 100개의 데이터를 UGUI에 넣으면 렉이 걸린다
NGUI는 그런 점에서 렉이 안걸릱다

2025/04/02


2025/04/03
풀링 패턴
미리 생성해 놓고 활성 비활성을 통해서 제어 하기 때문에 순간적인 프레임 드랍이 일어날 일이 적다

재귀함수
함수 안에 자신의 함수를 다시 호출하는 함수를 의미
코루틴과 whill을 사용해서 대체가 가능하다
ex.한번에 많은 경험치를 얻었을시 최대 레벨업이 가능한 값을 도출해 낼때 사용

string이 아닌 int를 활용할것

2025/04/03
코루틴,멀티 쓰레드를 사용해서 동기화 처럼 보여야 한다

2025/04/08
기술면접에서 중요한거
1.커뮤니케이션

init:초기화
FixedUpdate: 일정한 간격으로 호출 ex.동기화,선형보간
update: 불규칙한 간격으로 호출
Renderring

2025/04/09
Actor:어리얼 엔진 기준에 시작단,모든 물체를 대상(갈리는 여부는 성장,이동에 따라서 나뉨)

비디오 처럼 코루틴에서 계속 실행할 경우
-반복문 사용하면 됨
-무한루프를 사용해야한다


2025/04/10
시네머신
세팅으로 연출이 가능하다

tree 알고리즘

아레하
패스노드(네비매쉬 기능,점)
쉬운 예:오브젝트를 생성 시켜 놔서 그 곳을 이동 시키거나 할수도 있다

A*
장애물을 피하면서 목표 지점까지 이동 하게 하는 알고리즘


몬스터가 일정 거리 밧어나게 되면 몬스터의 근처로 이동(아레하) 시키기
또는 원래 자기 자리로 이동
:tree 구조도 가능


비주얼 코드(코딩 프로그램 이름)
:유일한 코드이고 가볍다


2025/04/11
Que:선입선출, 서버에서 사용함
Stack: 선입후출 UI창 닫기(pc는 UI가 화면 전체를 가리지 않기 때문에 재외)
인벤토리 - 툴팁 - 메세지


2025/04/18
Action(class):
함수를 연결할수 있다
대리자,UI에서 사용
스킬,전투,hp소실
인자값을 전달 받는다
델리게이트랑 비슷하다


즉시접근
:바로 처리
ex.결제

대리자 접근
:처리가 한박자 느리다
ex.경험치,서버,패치 로딩바(게이지)

데이터를 못받아도 다른 동작을 처리 할수 있다
연결시켜 놓고 대기하고 데이터를 받으면 처리한다

Delegaet(coll Back 메서드(함수))
:Action이랑 비슷하다
함수를 연결할수 있다
ex.경매장 접속시 잠시 기다리라는 안내문구 나온뒤 해당 페이지 접속,
물건 구매시 한번 더 경고 문구(함수 연결해 놓고)
상점에 연결해 놓고 구매 누르고 로딩중 띄운 다음에 구매 할거임? 팝업 띄우고
다시 클릭 하게 한다(강제로 만든다)

   //Vector3

    //DIstance: 거리 구하기
    //Dot 내적: 방향, 밀치기
    //Cross 외적: 빛 반사
    //Normalize 정규화: 방향만 구하고 값은 1로 낮춘다

2025/04/22
인벤토리(매니저라고 지칭 안함)
item정보
-분류
(일반,장착,기타)

inagame - 정보

ui 아이템 정보

드래그 앤 드랍 - 아이템 스왑 아이템

이터레이터 패턴(트리 알고리즘이 들어간다)
제네릭<T> + 추상 클래스를 사용하는 패턴

저장순서가 정해지지 않고 데이터 순회
객체접근 순회방식 통일
복잡한 내부구조를 숨김

장점
일관선
은늑성
분리성
SRP
OCP

아이템 정렬할때 혹은 순회를 사용할때 사용

어뎁터 패턴(유니티 필수)

기존 시스템(내 코드)과 업체(구글,스팀 등)가 
제공한 클래스랑 호환되게끔 하는 코드

      인게임(adapter) ->       Adapter(interface join)    <- UI(Adaptee)
    adapter : Adapter          / adaptee : Adaptee           / Adaptee
        doWark()                     methodA()                methodB()
                                       OR
       interface1                  interface1,2              interface2
:어뎁터 패턴(interface를 활용)
ex.skill,Buff
데코레이터 패턴(언리얼 필수)




커맨더 패턴(공통의 명령을 받지만 하는 일은 각자 다르다)
ex.키세팅,마우스 클릭(롤에 비뷰 하자면 맵을 클릭시 이동 적을 클릭시 평타)
,UI
고객이 주문 -> 주문서 -> 주문서를 카운터에 전달 -> 주방장이 음식 준비


Hp바를 흔드는걸로 타격감을 줄수 있다

삼각함수
//x= 거리*cos(각도)
        //y= 거리*sin(각도)
        Vector2 vector;

        vector.x = Mathf.Cos(45 * Mathf.Deg2Rad);
        vector.y = Mathf.Sin(45 * Mathf.Deg2Rad);


번들(패치 시스템)
리소스 로드가 가능한건 다 됨

인게임에서 foreach 사용하면 렉이 엄청 걸린다