unityShaderbuiltin.txt

이 예시에서는 'built-in render pipeline' 기반의 
유니티 프로젝트에서
셰이더 프로그래밍에 기초 개념에 대해서 살펴보자

비벗
물체의 원대 기준점

센터
물체의 중간

절대좌표
상대좌표

하이라키(계층)
tree 구조

scen graph
장면 그래프
3D 상의 게임 오브텍트들을 담고 있는 '자료 구조'

변환 transform
:자기자신으로의 사상(함수, 매핑mapping)

랜더링 Rendering
:3D공간상에 점점 당위의 데이터를
2D공단상에 픽셀 단위의 데이터를 이미지화 시켜(프레임 이미지) 표시 하는것


랜더링 파인프라인 Rendering 
랜더링의 일련의 공정들의 집합
                                                                                      surf를 활용
           unity                                           정점(vertexs)                                 픽셀/surpise

일반적인 랜더링 파이프라인의 구조          |            그래픽 카드에서 구현              |
========================================================================================================
응용프로그램 단계                          | 기하(도형)단계                               | 레스터 라이즈(픽셀들)단계
==========================================================================================================
응용프로그렘이 그래픽처리가 				월드변환     (카메라변환)뷰변환     투영변환
필요한 데이터와 명령문을 조직화		        이동변환			이동변환	 
하여 그래픽 처리 장치로 넘기는 작업	        회전변환            회전변환
									   	    비례변환

===========================================================================================================
CPU,RAM                                                  GPU,VIdeoRAM
int 연산(정수)                                         '실수 연산'
                                                
                                                정점 데이터를 다룬다                              픽셀 데이터를 다룬다
                                                연속적인 공간을 다룬다                            불연속적인 공간을 다룬다
                                                버택스 쉐이더                                     픽셀 쉐이더
                                                

셰이딩 shading:픽셀의 최종 색상을 결정한다(픽셀의 최종 색상 = f(물체의 색상,텍스처,조명))

Material 재질: How to shading. 어떻게 세이딩할지에 대한 '데이터'와 '방법(셰이더)'을 담은 개념
shader 셰이더: 셰이딩하는 작은 조각프로그램

텍스처 Texture:이미지 데이터



0_Material_overview

  Bio Matant 에셋의 matarial 구성을 살펴보며
  unity에서 제공하는 material과 shader의 개요를 살펴보자

  Standard: builtin render pipline프로젝트에서 물리기반 세이더 기본이다.

  legacy 세이더: 고전적인 세이딩 방식의 세이저
  <-- 에를들면, 같은 물체의 낮과 밤의 모습ㅇㄹ 별도의 가른 세이더오 만들어 표현
      왜냐하면 최종 색상이 다르므로

  물리기반 세이더: 물리직인 법칭에 의해 하나으 머테리얼(세이더 포함)오 여러가지 재질을 표현가능하게
  만드 세이더

  유니티 5부터 물리기반 세이더가 도입되었다.(아마도?)

  1_lightmodel